kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/Todo/app/src/main/java/com/example/todo/compose/AddScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:AddScreen visibility:public modality:FINAL <> (id:kotlin.String?, navController:androidx.navigation.NavHostController, viewModel:com.example.todo.TodoViewModel) returnType:kotlin.Unit
  annotations:
    SuppressLint(value = ["UnusedMaterial3ScaffoldPaddingParameter"])
    OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalMaterial3Api modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<androidx.compose.material3.ExperimentalMaterial3Api>])
    Composable
  VALUE_PARAMETER name:id index:0 type:kotlin.String?
  VALUE_PARAMETER name:navController index:1 type:androidx.navigation.NavHostController
  VALUE_PARAMETER name:viewModel index:2 type:com.example.todo.TodoViewModel
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:todoText$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.String>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.String> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:date$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.String>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$3 (): androidx.compose.runtime.MutableState<kotlin.String> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:todoImportance$delegate type:androidx.compose.runtime.MutableState<com.example.todo.Importance> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<com.example.todo.Importance> origin=null
        <T>: androidx.compose.runtime.MutableState<com.example.todo.Importance>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<com.example.todo.Importance>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$6 (): androidx.compose.runtime.MutableState<com.example.todo.Importance> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<com.example.todo.Importance>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:selectedImportance$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.String>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$9 (): androidx.compose.runtime.MutableState<kotlin.String> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:todoItem$delegate type:androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
        <T>: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$12 (): androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:deadline$delegate type:androidx.compose.runtime.MutableState<java.util.Date?> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<java.util.Date?> origin=null
        <T>: androidx.compose.runtime.MutableState<java.util.Date?>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<java.util.Date?>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AddScreen$lambda$15 (): androidx.compose.runtime.MutableState<java.util.Date?> declared in com.example.todo.compose.AddScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<java.util.Date?>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: GET_VAR 'id: kotlin.String? declared in com.example.todo.compose.AddScreenKt.AddScreen' type=kotlin.String? origin=null
            arg1: CONST Null type=kotlin.Nothing? value=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'private final fun AddScreen$lambda$14 ($todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>, <set-?>: com.example.todo.TodoItem?): kotlin.Unit declared in com.example.todo.compose.AddScreenKt' type=kotlin.Unit origin=EQ
            $todoItem$delegate: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
            <set-?>: CALL 'public final fun getItemById (id: kotlin.String): com.example.todo.TodoItem? declared in com.example.todo.TodoViewModel' type=com.example.todo.TodoItem? origin=null
              $this: GET_VAR 'viewModel: com.example.todo.TodoViewModel declared in com.example.todo.compose.AddScreenKt.AddScreen' type=com.example.todo.TodoViewModel origin=null
              id: GET_VAR 'id: kotlin.String? declared in com.example.todo.compose.AddScreenKt.AddScreen' type=kotlin.String? origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: CALL 'private final fun AddScreen$lambda$13 ($todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>): com.example.todo.TodoItem? declared in com.example.todo.compose.AddScreenKt' type=com.example.todo.TodoItem? origin=GET_LOCAL_PROPERTY
                    $todoItem$delegate: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
              then: BLOCK type=kotlin.Unit origin=null
                CALL 'private final fun AddScreen$lambda$2 ($todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String>, <set-?>: kotlin.String): kotlin.Unit declared in com.example.todo.compose.AddScreenKt' type=kotlin.Unit origin=EQ
                  $todoText$delegate: GET_VAR 'val todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
                  <set-?>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.String origin=EXCLEXCL
                    <T0>: kotlin.String
                    arg0: CALL 'public final fun <get-text> (): kotlin.String? declared in com.example.todo.TodoItem' type=kotlin.String? origin=GET_PROPERTY
                      $this: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=com.example.todo.TodoItem origin=EXCLEXCL
                        <T0>: com.example.todo.TodoItem
                        arg0: CALL 'private final fun AddScreen$lambda$13 ($todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>): com.example.todo.TodoItem? declared in com.example.todo.compose.AddScreenKt' type=com.example.todo.TodoItem? origin=GET_LOCAL_PROPERTY
                          $todoItem$delegate: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
                CALL 'private final fun AddScreen$lambda$8 ($todoImportance$delegate: androidx.compose.runtime.MutableState<com.example.todo.Importance>, <set-?>: com.example.todo.Importance): kotlin.Unit declared in com.example.todo.compose.AddScreenKt' type=kotlin.Unit origin=EQ
                  $todoImportance$delegate: GET_VAR 'val todoImportance$delegate: androidx.compose.runtime.MutableState<com.example.todo.Importance> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.Importance> origin=null
                  <set-?>: CALL 'public final fun <get-importance> (): com.example.todo.Importance declared in com.example.todo.TodoItem' type=com.example.todo.Importance origin=GET_PROPERTY
                    $this: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=com.example.todo.TodoItem origin=EXCLEXCL
                      <T0>: com.example.todo.TodoItem
                      arg0: CALL 'private final fun AddScreen$lambda$13 ($todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>): com.example.todo.TodoItem? declared in com.example.todo.compose.AddScreenKt' type=com.example.todo.TodoItem? origin=GET_LOCAL_PROPERTY
                        $todoItem$delegate: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
                CALL 'private final fun AddScreen$lambda$11 ($selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String>, <set-?>: kotlin.String): kotlin.Unit declared in com.example.todo.compose.AddScreenKt' type=kotlin.Unit origin=EQ
                  $selectedImportance$delegate: GET_VAR 'val selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
                  <set-?>: CALL 'public final fun getStringFromImportance (importance: com.example.todo.Importance): kotlin.String declared in com.example.todo.compose.AddScreenKt' type=kotlin.String origin=null
                    importance: CALL 'private final fun AddScreen$lambda$7 ($todoImportance$delegate: androidx.compose.runtime.MutableState<com.example.todo.Importance>): com.example.todo.Importance declared in com.example.todo.compose.AddScreenKt' type=com.example.todo.Importance origin=GET_LOCAL_PROPERTY
                      $todoImportance$delegate: GET_VAR 'val todoImportance$delegate: androidx.compose.runtime.MutableState<com.example.todo.Importance> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.Importance> origin=null
                CALL 'private final fun AddScreen$lambda$17 ($deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?>, <set-?>: java.util.Date?): kotlin.Unit declared in com.example.todo.compose.AddScreenKt' type=kotlin.Unit origin=EQ
                  $deadline$delegate: GET_VAR 'val deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<java.util.Date?> origin=null
                  <set-?>: CALL 'public final fun <get-deadline> (): java.util.Date? declared in com.example.todo.TodoItem' type=java.util.Date? origin=GET_PROPERTY
                    $this: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=com.example.todo.TodoItem origin=EXCLEXCL
                      <T0>: com.example.todo.TodoItem
                      arg0: CALL 'private final fun AddScreen$lambda$13 ($todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>): com.example.todo.TodoItem? declared in com.example.todo.compose.AddScreenKt' type=com.example.todo.TodoItem? origin=GET_LOCAL_PROPERTY
                        $todoItem$delegate: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
    CALL 'public final fun Scaffold-QMVK-b8$default (modifier: androidx.compose.ui.Modifier?, topBar: @[Composable] kotlin.Function0<kotlin.Unit>?, bottomBar: @[Composable] kotlin.Function0<kotlin.Unit>?, snackbarHost: @[Composable] kotlin.Function0<kotlin.Unit>?, floatingActionButton: @[Composable] kotlin.Function0<kotlin.Unit>?, floatingActionButtonPosition: androidx.compose.material3.FabPosition, containerColor: androidx.compose.ui.graphics.Color, contentColor: androidx.compose.ui.graphics.Color, contentWindowInsets: androidx.compose.foundation.layout.WindowInsets?, content: @[Composable] kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.ScaffoldKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      topBar: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
          <T>: kotlin.Function0<kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: androidx.navigation.NavHostController, p1: kotlin.String?, p2: com.example.todo.TodoViewModel, p3: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>, p4: androidx.compose.runtime.MutableState<kotlin.String>, p5: androidx.compose.runtime.MutableState<kotlin.String>, p6: androidx.compose.runtime.MutableState<java.util.Date?>): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            p0: GET_VAR 'navController: androidx.navigation.NavHostController declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.navigation.NavHostController origin=null
            p1: GET_VAR 'id: kotlin.String? declared in com.example.todo.compose.AddScreenKt.AddScreen' type=kotlin.String? origin=null
            p2: GET_VAR 'viewModel: com.example.todo.TodoViewModel declared in com.example.todo.compose.AddScreenKt.AddScreen' type=com.example.todo.TodoViewModel origin=null
            p3: GET_VAR 'val todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<com.example.todo.TodoItem?> origin=null
            p4: GET_VAR 'val todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            p5: GET_VAR 'val selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            p6: GET_VAR 'val deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<java.util.Date?> origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AddScreen$lambda$25 ($navController: androidx.navigation.NavHostController, $id: kotlin.String?, $viewModel: com.example.todo.TodoViewModel, $todoItem$delegate: androidx.compose.runtime.MutableState<com.example.todo.TodoItem?>, $todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?>): kotlin.Unit? declared in com.example.todo.compose.AddScreenKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      bottomBar: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
      snackbarHost: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
      floatingActionButton: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
      floatingActionButtonPosition: COMPOSITE type=androidx.compose.material3.FabPosition origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.material3.FabPosition origin=null
          <T>: kotlin.Int
          <R>: androidx.compose.material3.FabPosition
          v: CONST Int type=kotlin.Int value=0
      containerColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
          <T>: kotlin.Long
          <R>: androidx.compose.ui.graphics.Color
          v: CONST Long type=kotlin.Long value=0
      contentColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
        CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
          <T>: kotlin.Long
          <R>: androidx.compose.ui.graphics.Color
          v: CONST Long type=kotlin.Long value=0
      contentWindowInsets: COMPOSITE type=androidx.compose.foundation.layout.WindowInsets? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.WindowInsets? value=null
      content: BLOCK type=kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit> origin=null
          <T>: kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.MutableState<kotlin.String>, p1: androidx.compose.runtime.MutableState<kotlin.String>, p2: androidx.compose.runtime.MutableState<kotlin.String>, p3: androidx.compose.runtime.MutableState<java.util.Date?>, p4: android.content.Context, p5: kotlin.String?, p6: com.example.todo.TodoViewModel, p7: androidx.navigation.NavHostController): kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<androidx.compose.foundation.layout.PaddingValues, kotlin.Unit> origin=null
            p0: GET_VAR 'val todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            p1: GET_VAR 'val selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            p2: GET_VAR 'val date$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            p3: GET_VAR 'val deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?> [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.compose.runtime.MutableState<java.util.Date?> origin=null
            p4: GET_VAR 'val context: android.content.Context [val] declared in com.example.todo.compose.AddScreenKt.AddScreen' type=android.content.Context origin=null
            p5: GET_VAR 'id: kotlin.String? declared in com.example.todo.compose.AddScreenKt.AddScreen' type=kotlin.String? origin=null
            p6: GET_VAR 'viewModel: com.example.todo.TodoViewModel declared in com.example.todo.compose.AddScreenKt.AddScreen' type=com.example.todo.TodoViewModel origin=null
            p7: GET_VAR 'navController: androidx.navigation.NavHostController declared in com.example.todo.compose.AddScreenKt.AddScreen' type=androidx.navigation.NavHostController origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AddScreen$lambda$54 ($todoText$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $selectedImportance$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $date$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $deadline$delegate: androidx.compose.runtime.MutableState<java.util.Date?>, $context: android.content.Context, $id: kotlin.String?, $viewModel: com.example.todo.TodoViewModel, $navController: androidx.navigation.NavHostController, it: androidx.compose.foundation.layout.PaddingValues): kotlin.Unit? declared in com.example.todo.compose.AddScreenKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.foundation.layout.PaddingValues): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      $mask0: CONST Int type=kotlin.Int value=509
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 70 more


